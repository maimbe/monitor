using System;
using System.Diagnostics;
using System.IO;
using System.Net;
using System.Threading.Tasks;
using RestSharp;
using Newtonsoft.Json;
//using static System.Console;
//using System.Collections.Generic;
//using Windows.ApplicationModel.Background;

namespace Teste {
	class Program {
		static async Task Main(string[] args) {

            long inicio = DateTimeOffset.Now.ToUnixTimeSeconds();
			Console.Title = "Monitor v23.2.26";
			string hora_atual = DateTime.Now.ToString("HH:mm");
			string momento = DateTime.Now.ToString("HH:mm");

			//Declarando Variaveis de Reset
			string json = File.ReadAllText("ServerConfigs.json");
			dynamic obj = JsonConvert.DeserializeObject<dynamic>(json);

			string serverName = "Sem Nome";
			string HostNameJson;
			string[] horas = null;
			string grupo_formal = "None";
			string grupo_livre = "None";
			string periodo = "Manual";
			string grupo_equipe = "120363047685764260@g.us";
			string grupos = grupo_equipe; //Mínimo


			string HostName = Dns.GetHostName();
			Console.WriteLine(" Hostname: "+ HostName);
			foreach (var servidor in obj.servidores) {
				HostNameJson = servidor.hostname;
				//Console.WriteLine("ServerName:" + HostNameJson);
				if (HostNameJson == HostName) {
					//string horas = servidor.horarios;
					serverName = servidor.nome;
					grupo_formal = servidor.grupo_formal;
					grupo_livre = servidor.grupo_livre;
					periodo = servidor.periodo;
					horas = servidor.horarios.ToObject<string[]>();
					Console.WriteLine(" ServerName: " + serverName+"\n");
					var auxx = 0;
					foreach (string hora in horas) {
						auxx++;
						Console.WriteLine(" Horário Restart #" + auxx + ": "+ hora);
					}
				}
			}

			System.Threading.Thread.Sleep(1000);

			//Incrementar grupos
			if (grupo_formal != "None") {
				grupos += "," + grupo_formal;
			}
			if (grupo_livre != "None") {
				grupos += "," + grupo_livre;
			}

			Console.WriteLine("\n Grupos ouvindo:" + grupos);

			int restart_programado = 0;
			int restart_falha = 0;
			int restart_total = 0;
			int refreshs = 0;
			long aux = 0;
			int d = 0;
			int h = 0;
			int m = 0;
			int s = 0;

		
			//Localizando BOT
			Process[] pathbot = Process.GetProcessesByName("LordsMobileBot");
			string fullPath = "";
			string local_bot = "";


			if (pathbot.Length > 0) {
				fullPath = pathbot[0].MainModule.FileName;
				local_bot = fullPath;
				//Console.WriteLine(local_bot);
				local_bot = local_bot.Replace(@"\LordsMobileBot.exe", String.Empty) + @"\config";
			} else {
				//? quando o processo não estiver iniciado
				Process.Start("LordsMobileBot.exe");
				Console.WriteLine("\n Bot sendo Inciado pelo Monitor...");
				System.Threading.Thread.Sleep(120000);
			}


			//Console.ForegroundColor = ConsoleColor.DarkBlue;
			//Console.WriteLine("\t\n Monitor 3h - Reinicializador: \t\n");

			//Console.ResetColor();
			//Console.WriteLine("\n Localização do Bot: " + local_bot + " \t\n");
			Console.WriteLine(" Servidor: " + serverName + " \t\n");
		//Inicio do Loop
		Starting:
			//Localizando BOT
			pathbot = Process.GetProcessesByName("LordsMobileBot");
			fullPath = pathbot[0].MainModule.FileName;
			local_bot = fullPath;
			fullPath = fullPath.Replace(@"\LordsMobileBot.exe", String.Empty) + @"\config";

			var url = "https://api.ultramsg.com/instance32887/messages/chat";
			var client = new RestClient(url);
			var mensagem = "";
			var output = "";
			var request = new RestRequest(url, Method.Post);


			bool parar = false;
			while (parar == false) {
				hora_atual = DateTime.Now.ToString("HH:mm");
				momento = DateTime.Now.ToString("HH:mm:ss");

				foreach (string hora in horas) {
					if (hora == hora_atual) {
						Process[] processos = Process.GetProcessesByName("LordsMobileBot");
						if (processos.Length == 0) {
							Console.WriteLine("Bot OFF " + hora_atual);
						} else {
							Console.WriteLine("Bot ON " + hora_atual);
						}
						parar = true;
					}
				}

				long agora = DateTimeOffset.Now.ToUnixTimeSeconds();
				//string timeStamp = agora.ToString();

				refreshs++;
				aux = agora - inicio;

				string tempo_logado = "Tempo ativo: ";

				if (aux > 86400) {
					d = (int)aux / 86400;
					aux -= d * 86400;
					tempo_logado += d + "d ";
				}
				if (aux > 3600) {
					h = (int)aux / 3600;
					aux -= h * 3600;
					tempo_logado += h + "h ";
				}
				if (aux > 60) {
					m = (int)aux / 60;
					aux -= m * 60;
					tempo_logado += m + "m ";
				}
				s = (int)aux;
				tempo_logado += s + "s";



				restart_total = restart_falha + restart_programado;

				string nome_programa = " Monitor v23.2.26 ";
				string restart_info = "Restarts: " + restart_programado + " Prog. + " + restart_falha + " Falhas = " + restart_total + " total";
				string refresh_info = "Refreshs count: " + refreshs;
				string hora_info = "Hora= [" + momento + "]";



				Console.Title = nome_programa + " ~ Servidor: " + serverName +" "+ periodo + " ~ " + hora_info + " ~ " + restart_info + " ~ " + tempo_logado;


				Process[] teste_processo = Process.GetProcessesByName("LordsMobileBot");
				if (teste_processo.Length == 0) {//Reiniciamento Manual, Teste ou Crash
					Console.WriteLine(" Bot Fechou! Reiniciando... \t\n");
					client = new RestClient(url);

					mensagem = "[Teste] 🤖 Aplicando Templates 😁\n\nServidor: *" + serverName + " (" + periodo + ") *\n\nHorário servidor: " + hora_atual + " (GMT-5)\n\nTipo: Reiniciamento Manual\n\n(Mensagem automática)";

					request = new RestRequest(url, Method.Post);
					request.AddHeader("content-type", "application/x-www-form-urlencoded");
					request.AddParameter("token", "4thssg5i0307b8x6");
					request.AddParameter("to", grupos);
					request.AddParameter("body", mensagem);
					RestResponse response = await client.ExecuteAsync(request);
					output = response.Content;
					Console.WriteLine(output);


					Process process = new Process();
					process.StartInfo.FileName = local_bot;
					process.StartInfo.WindowStyle = ProcessWindowStyle.Maximized;
					System.Threading.Thread.Sleep(30000);//30s
					process.Start();
					restart_falha++;
					System.Threading.Thread.Sleep(90000);//90s
					Console.WriteLine(" Problema no bot! Hora:" + momento + " \t\n");
				} else {
					//Console.WriteLine("Processo do bot OK! \t\n");
				}
				System.Threading.Thread.Sleep(1000); //10 segundos
			}

			Console.WriteLine(" Deu Match " + hora_atual + " ");
			Process[] processos1 = Process.GetProcessesByName("LordsMobileBot");

			bool derrubado = false;//processo derrubado

			if (processos1.Length == 0) {
				Console.WriteLine(" Bot OFF " + hora_atual + " ");
			} else {
				Console.WriteLine(" Bot ON Kill " + hora_atual + " ");
				processos1[0].Kill();
				processos1[0].WaitForExit();
				derrubado = true;
			}

			//Inicia Busca
			DirectoryInfo diretorio = new DirectoryInfo(fullPath);
			//DirectoryInfo diretorio = new DirectoryInfo(@"E:\LordsBOT Oficial_2505\testes\config\config");

			
			/*settings_new*/
			int num_ok = 0;
			int num_erro = 0;
			string momento_reset = DateTime.Now.ToString("dd''MM''yyyy'_'HH''mm");

			//Começamos a listar os arquivos
			FileInfo[] SettingsNew = diretorio.GetFiles("settings_new.json", SearchOption.AllDirectories);
			foreach (FileInfo fileinfo in SettingsNew) {
				TimeSpan t = DateTime.Now.Subtract(fileinfo.LastWriteTime);
				if (!Directory.Exists(fileinfo.Directory.FullName + "\\bkp_bot")) {
					Directory.CreateDirectory(fileinfo.Directory.FullName + "\\bkp_bot");
				}
				if (fileinfo.Length > 50000 && t.Days <= 90) {
					File.Move(fileinfo.Directory.FullName + "\\" + "settings.json", fileinfo.Directory.FullName + "\\bkp_bot\\" + "settings_" + momento_reset + "_old.json");
					fileinfo.MoveTo(fileinfo.Directory.FullName + "\\" + "settings.json");
					Console.WriteLine(" " + fileinfo.Directory + " " + fileinfo.Name + " Tamanho:" + fileinfo.Length + " Dias:" + t.Days + " ");
					num_ok++;
				} else {
					Console.WriteLine(" ERRO " + fileinfo.Directory + "\\" + fileinfo.Name + " " + fileinfo.Length + " ");
					num_erro++;
				}
			}
			Console.WriteLine(" SettingsNew OK: " + num_ok + "\r\n" + " SettingsNew FAIL: " + num_erro + " \r\n");

			/*banksettings_reset*/
			num_ok = 0;
			num_erro = 0;
			FileInfo[] BankSettingsNew = diretorio.GetFiles("banksettings_test.json", SearchOption.AllDirectories);

			foreach (FileInfo fileinfo in BankSettingsNew) {
				TimeSpan t = DateTime.Now.Subtract(fileinfo.LastWriteTime);
				if (!Directory.Exists(fileinfo.Directory.FullName + "\\bkp_bot")) {
					Directory.CreateDirectory(fileinfo.Directory.FullName + "\\bkp_bot");
				}
				if (fileinfo.Length >= 5000 && t.Days <= 90) {
					File.Move(fileinfo.Directory.FullName + "\\" + "banksettings.json", fileinfo.Directory.FullName + "\\bkp_bot\\" + "banksettings_" + momento_reset + "_old.json");
					fileinfo.MoveTo(fileinfo.Directory.FullName + "\\" + "banksettings.json");
					Console.WriteLine(" " + fileinfo.Directory + " " + fileinfo.Name + " Tamanho:" + fileinfo.Length + " Dias:" + t.Days + " ");
					num_ok++;
				} else {
					Console.WriteLine(" ERRO " + fileinfo.Directory + "\\" + fileinfo.Name + " " + fileinfo.Length + " ");
					num_erro++;
				}
			}
			Console.WriteLine(" ResetBankSettings OK: " + num_ok + "\r\n" + " ResetBankSettings FAIL: " + num_erro + " \r\n");

			/*acc_edited*/
			num_ok = 0;
			num_erro = 0;
			FileInfo[] accNew = diretorio.GetFiles("acc_edited.json", SearchOption.AllDirectories);
			foreach (FileInfo fileinfo in accNew) {
				TimeSpan t = DateTime.Now.Subtract(fileinfo.LastWriteTime);
				if (!Directory.Exists(fileinfo.Directory.FullName + "\\bkp_bot")) {
					Directory.CreateDirectory(fileinfo.Directory.FullName + "\\bkp_bot");
				}
				if (fileinfo.Length >= 1000 && t.Days <= 90) {
					File.Move(fileinfo.Directory.FullName + "\\" + "acc.json", fileinfo.Directory.FullName + "\\bkp_bot\\" + "acc_" + momento_reset + "_old.json");
					fileinfo.MoveTo(fileinfo.Directory.FullName + "\\" + "acc.json");
					Console.WriteLine(" " + fileinfo.Directory + " " + fileinfo.Name + " Tamanho:" + fileinfo.Length + " Dias:" + t.Days + " ");
					num_ok++;
				} else {
					Console.WriteLine(" ERRO " + fileinfo.Directory + "\\" + fileinfo.Name + " " + fileinfo.Length + " ");
					num_erro++;
				}
			}
			Console.WriteLine(" AccEdited OK: " + num_ok + "\r\n" + " AccEdited FAIL: " + num_erro + " \r\n");

			/*manageGuild_new*/
			num_ok = 0;
			num_erro = 0;
			FileInfo[] manageGuilNew = diretorio.GetFiles("manageGuild_new.json", SearchOption.AllDirectories);
			foreach (FileInfo fileinfo in manageGuilNew) {
				TimeSpan t = DateTime.Now.Subtract(fileinfo.LastWriteTime);
				if (!Directory.Exists(fileinfo.Directory.FullName + "\\bkp_bot")) {
					Directory.CreateDirectory(fileinfo.Directory.FullName + "\\bkp_bot");
				}
				if (fileinfo.Length >= 0 && t.Days <= 90) {
					File.Move(fileinfo.Directory.FullName + "\\" + "manageGuild.json", fileinfo.Directory.FullName + "\\bkp_bot\\" + "manageGuild_" + momento_reset + "_old.json");
					fileinfo.MoveTo(fileinfo.Directory.FullName + "\\" + "manageGuild.json");
					Console.WriteLine(" " + fileinfo.Directory + "\\" + fileinfo.Name + " Tamanho:" + fileinfo.Length + " Dias:" + t.Days + " ");
					num_ok++;
				} else {
					Console.WriteLine(" ERRO " + fileinfo.Directory + "\\" + fileinfo.Name + " " + fileinfo.Length + " ");
					num_erro++;
				}
			}
			Console.WriteLine(" manageGuild NEW OK: " + num_ok + "\r\n" + " manageGuild NEW FAIL: " + num_erro + " \r\n");

			if (derrubado) {//Reiniciamento Normal
				Console.WriteLine(" Bot desativado \r\n");

				url = "https://api.ultramsg.com/instance32887/messages/chat";
				client = new RestClient(url);

				mensagem = "[Teste] 🤖 Aplicando Templates 😁\n\nServidor: *" + serverName + " (" + periodo + ") *\n\nHorário servidor: " + hora_atual + " (GMT-5)\n\nTipo: Reiniciamento Normal (Programado)\n\n(Mensagem automática)";

				request = new RestRequest(url, Method.Post);
				request.AddHeader("content-type", "application/x-www-form-urlencoded");
				request.AddParameter("token", "4thssg5i0307b8x6");
				request.AddParameter("to", grupos);
				request.AddParameter("body", mensagem);
				RestResponse response = await client.ExecuteAsync(request);
				output = response.Content;

				Console.WriteLine(output);

				System.Threading.Thread.Sleep(120000);

				Process process1 = new Process();
				process1.StartInfo.FileName = local_bot;
				process1.StartInfo.WindowStyle = ProcessWindowStyle.Maximized;
				Console.WriteLine(" Reiniciando Bot... \r\n");
				process1.Start();

				Process[] processo = Process.GetProcessesByName("LordsMobileBot");
				if (processo.Length == 0) {
					// Configure the process using the StartInfo properties.

				}
				restart_programado++;
				System.Threading.Thread.Sleep(120000);
			}
			//System.Threading.Thread.Sleep(2000);
			goto Starting;

		} //fecha  main

	} //fech classe


} //fecha namespace
